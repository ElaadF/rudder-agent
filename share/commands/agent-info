#!/bin/sh
# @description display a summary of agent information
# @man Outputs detailed information about the agent configuration, especially
# @man what defines the node (hostname, uuid and key hash) and its
# @man policy server.
# @man +
# @man *Options*:
# @man +
# @man *-v*: run the agent in verbose mode, prints detailed information


. "${BASEDIR}/../lib/common.sh"
. "${BASEDIR}/../lib/cfengine_parsing.sh"

VERBOSE=false

while getopts "v" opt; do
  case $opt in
    v)
      VERBOSE=true
      ;;
  esac
done

UUID=$(cat /opt/rudder/etc/uuid.hive 2>/dev/null)
[ $? -ne 0 ] && UUID="Not yet configured"

HASH=$(openssl dgst -sha1 /var/rudder/cfengine-community/ppkeys/localhost.pub 2>/dev/null)
[ $? -ne 0 ] && HASH="Not yet configured"
HASH=$(echo "${HASH}" | sed -e 's/.*= //')

POLICY=$(cat /var/rudder/cfengine-community/policy_server.dat 2>/dev/null)
[ $? -ne 0 ] && POLICY="Not yet configured"

POLICY_FETCHED=$(stat -c %y /var/rudder/cfengine-community/last_successful_inputs_update 2> /dev/null)
[ $? -ne 0 ] && POLICY_FETCHED="Not yet updated" || POLICY_FETCHED=$(echo "${POLICY_FETCHED}" | cut -d'.' -f1)

INVENTORY_SENT=$(stat -c %y /var/rudder/tmp/inventory_sent 2> /dev/null)
[ $? -ne 0 ] && INVENTORY_SENT="Not yet sent" || INVENTORY_SENT=$(echo "${INVENTORY_SENT}" | cut -d'.' -f1)

ROLES=$(ls -m /opt/rudder/etc/server-roles.d/ 2>/dev/null)
if [ $? -ne 0 ]; then
  ROLES="rudder-agent"
else
  ROLES="${ROLES}, rudder-agent"
fi

if [ "${UUID}" != "root" ]
then
  if [ -d /var/rudder/share ]
  then
    ROLES="${ROLES}, rudder-relay"
  elif [ -d /var/rudder/inventories/incoming ]
  then
    ROLES="${ROLES}, rudder-relay (not registered)"
  fi
fi

if [ -e /opt/rudder/etc/disable-agent ]; then
  ENABLED="disabled"
else
  ENABLED="enabled"
fi

VERSION=`${RUDDER_BIN} agent version`

echo "Hostname: $(get_hostname)"
echo "UUID: ${UUID}"
echo "Key Hash: ${HASH}"
echo "Policy server: ${POLICY}"
echo "Roles: ${ROLES}"
if [ -n "${RUDDER_REPORT_MODE}" ]
then
  echo "Report mode: ${RUDDER_REPORT_MODE}"
fi
if [ -n "${AGENT_RUN_INTERVAL}" ]
then
  echo "Run interval: ${AGENT_RUN_INTERVAL} min"
fi
echo "Agent is ${ENABLED}"
echo "Policy updated: ${POLICY_FETCHED}"
echo "Inventory sent: ${INVENTORY_SENT}"
echo "Version: ${VERSION}"

# Display system classes in verbose mode
if [ "${VERBOSE}" = "true" ]; then
  echo "Defined system conditions:"
  "${RUDDER_VAR}/cfengine-community/bin/cf-promises" --show-classes | grep "hardclass$" | awk '{ print "  " $1 }'
fi

