#!/bin/sh
# @description reset agent status and cache
# @man Remove all locks and state cache of the agent, and restore initial promises.
# @man This won't affect the desired state of the node, but will only
# @man reset the internal state of the agent. It is useful to test a rule
# @man without caching interference or when you have trouble with the promises updates,
# @man and is in most cases sufficient to resolve issues.
# @man +
# @man To completely reinitialize the agent and make it appear as a new node again, please
# @man use "rudder agent factory-reset" instead.
# @man +
# @man *Options*:
# @man +
# @man *-i*: run the agent in information mode, prints basic information
# @man +
# @man *-q*: run the agent in quiet mode (display only error messages)
# @man +
# @man *-c*: run the agent without color output

. "${BASEDIR}/../lib/common.sh"

VERBOSITY=""
VERBOSE=false
QUIET=false

while getopts "iIvdqc" opt; do
  case $opt in
    i|I)
      VERBOSITY="-I ${INFO_CLASS}"
      VERBOSE=true
      QUIET=false
      ;;
    v)
      VERBOSITY="-v ${VERBOSE_CLASS}"
      VERBOSE=true
      QUIET=false
      ;;
    d)
      VERBOSITY="-d ${DEBUG_CLASS}"
      VERBOSE=true
      QUIET=false
      ;;
    q)
      VERBOSITY=""
      VERBOSE=false
      QUIET=true
      ;;
    c)
      COLOR=""
      clear_colors
      ;;
  esac
done

# Try to remove everything that can block
# - restore initial promises
if [ "${UUID}" != "root" ]
then
  [ "$VERBOSE" = true ] && echo "Restoring initial promises..."
  rm -rf /var/rudder/cfengine-community/inputs/*
  # - remove ncf
  rm -rf /var/rudder/ncf/common/*
  rm -rf /var/rudder/ncf/local/*
fi

# - remove state
[ "$VERBOSE" = true ] && echo "Resetting internal agent state..."
rm -rf /var/rudder/cfengine-community/state/*
rm -f /var/rudder/cfengine-community/*.lmdb

# - remove locks
[ "$VERBOSE" = true ] && echo "Removing all agent locks..."
rm -f /var/rudder/cfengine-community/*lock

# - remove the disable status
[ "$VERBOSE" = true ] && echo "Enabling the agent if needed..."
rm -f /opt/rudder/etc/disable-agent

# - bootstrap agent
if [ -f "${RUDDER_VAR}/cfengine-community/policy_server.dat" ]
then
  if [ "${UUID}" != "root" ]
  then
    # the update should do the rest
    cp /opt/rudder/share/bootstrap-promises/* /var/rudder/cfengine-community/inputs/
  fi
else
  [ "${QUIET}" = false ] && echo "No policy server file, cannot update"
  exit 1
fi

# - update to make sure we have at least the initial promises
[ "$VERBOSE" = true ] && echo "Getting initial promises..."
# $@ to pass options through
rudder agent update "$@"

[ "$QUIET" = false ] && printf "${GREEN}ok${NORMAL}: Rudder agent state has been reset.\n"
